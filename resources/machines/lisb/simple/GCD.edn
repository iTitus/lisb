(machine
  (machine-variant)
  (machine-header :GCD [])
  (variables :x :y)
  (invariant (and (contains? nat-set :x) (contains? nat-set :y)))
  (init (parallel-substitution (assign :x 70) (assign :y 40)))
  (operations
    (operation [:s] :GCDSolution [] (if-sub (= :y 0) (assign :s :x) (assign :s -1)))
    (operation [] :Step [] (if-sub (> :y 0) (parallel-substitution (assign :x :y) (assign :y (mod :x :y)))))
    (operation [] :Restart [:w1 :w2] (pre (and (contains? nat1-set :w1) (contains? nat1-set :w2))
                                       (if-sub (> :w1 :w2)
                                         (assign :x :w1 :y :w2)
                                         (assign :y :w1 :x :w2))))))