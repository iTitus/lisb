(machine
 :PitmanController_v6
 (includes :BlinkLamps_v3 :Sensors)
 (promotes :TIME_BlinkerOn :TIME_BlinkerOff :TIME_Nothing)
 (constants :pitman_direction :continuousBlink)
 (properties
  (=
   :pitman_direction
   #{(|-> :Upward7 :right_blink)
     (|-> :Upward5 :right_blink)
     (|-> :Neutral :neutral_blink)
     (|-> :Downward5 :left_blink)
     (|-> :Downward7 :left_blink)}))
 (assertions
  (member? :pitman_direction (--> :PITMAN_POSITION :DIRECTIONS)))
 (invariants
  (=>
   (= :hazardWarningSwitchOn :switch_on)
   (= :active_blinkers :BLINK_DIRECTION))
  (=>
   (and
    (= :hazardWarningSwitchOn :switch_off)
    (= :remaining_blinks :continuousBlink))
   (=
    :active_blinkers
    #{(fn-call :pitman_direction :pitmanArmUpDown)}))
  (=>
   (and
    (member? :pitmanArmUpDown :PITMAN_DIRECTION_BLINKING)
    (= :engineOn true))
   (subset?
    #{(fn-call :pitman_direction :pitmanArmUpDown)}
    :active_blinkers))
  (=>
   (and (= :engineOn false) (= :hazardWarningSwitchOn :switch_off))
   (= :active_blinkers #{}))
  (=>
   (= :hazardWarningSwitchOn :switch_on)
   (= :remaining_blinks :continuousBlink))
  (=>
   (and
    (member? :pitmanArmUpDown :PITMAN_DIRECTION_BLINKING)
    (= :engineOn true))
   (= :remaining_blinks :continuousBlink)))
 (operations
  (:ENV_Turn_EngineOn
   []
   (parallel-sub
    (op-call :SET_EngineOn)
    (if-sub
     (and
      (member? :pitmanArmUpDown :PITMAN_DIRECTION_BLINKING)
      (= :hazardWarningSwitchOn :switch_off))
     (op-call
      :SET_BlinkersOn
      (fn-call :pitman_direction :pitmanArmUpDown)
      :continuousBlink))))
  (:ENV_Turn_EngineOff
   []
   (parallel-sub
    (op-call :SET_EngineOff)
    (if-sub
     (= :hazardWarningSwitchOn :switch_off)
     (op-call :SET_AllBlinkersOff))))
  (:ENV_Pitman_DirectionBlinking
   [:newPos]
   (pre
    (not= :newPos :pitmanArmUpDown)
    (parallel-sub
     (if-sub
      (and (= :hazardWarningSwitchOn :switch_off) (= :engineOn true))
      (op-call
       :SET_BlinkersOn
       (fn-call :pitman_direction :newPos)
       :continuousBlink))
     (op-call :SET_Pitman_DirectionBlinking :newPos))))
  (:ENV_Pitman_Reset_to_Neutral
   []
   (parallel-sub
    (op-call :SET_Pitman_Reset_to_Neutral)
    (if-sub
     (and
      (= :hazardWarningSwitchOn :switch_off)
      (= :remaining_blinks :continuousBlink))
     (op-call :SET_AllBlinkersOff))))
  (:ENV_Pitman_Tip_blinking_short
   [:newPos]
   (pre
    (and
     (member? :newPos :PITMAN_TIP_BLINKING)
     (not= :newPos :pitmanArmUpDown))
    (parallel-sub
     (op-call :SET_Pitman_Tip_blinking_short :newPos)
     (if-sub
      (and (= :hazardWarningSwitchOn :switch_off) (= :engineOn true))
      (op-call
       :SET_BlinkersOn
       (fn-call :pitman_direction :newPos)
       3)))))
  (:TIME_Tip_blinking_Timeout
   []
   (select
    (and
     (member? :pitmanArmUpDown :PITMAN_TIP_BLINKING)
     (> :remaining_blinks 1)
     (=
      :active_blinkers
      #{(fn-call :pitman_direction :pitmanArmUpDown)}))
    (op-call :SET_RemainingBlinks :continuousBlink)))
  (:ENV_Hazard_blinking
   [:newSwitchPos]
   (select
    (not= :newSwitchPos :hazardWarningSwitchOn)
    (parallel-sub
     (select
      (= :newSwitchPos :switch_on)
      (op-call :SET_AllBlinkersOn)
      (= :newSwitchPos :switch_off)
      (cond
       (or (= :pitmanArmUpDown :Neutral) (= :engineOn false))
       (op-call :SET_AllBlinkersOff)
       (not (member? :pitmanArmUpDown :PITMAN_DIRECTION_BLINKING))
       (op-call :SET_AllBlinkersOff)
       (op-call
        :SET_BlinkersOn
        (fn-call :pitman_direction :pitmanArmUpDown)
        :remaining_blinks)))
     (op-call :SET_Hazard_blinking :newSwitchPos))))))
