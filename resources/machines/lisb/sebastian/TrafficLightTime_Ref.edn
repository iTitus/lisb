(refinement :TrafficLightTime_Ref :TrafficLight2
  (includes [:GenericTimersMC :COMMANDS])
  (variables :tl_cars :tl_peds)
  (init (parallel-substitution (assign :tl_cars :red) (assign :tl_peds :red)))
  (operations
    (operation [] :Send_command_cars_ry [] (select (and (= :tl_cars :red) (= :tl_peds :red)) (op-subs :AddDeadline :cmd_cars_redyellow 500)))
    (operation [] :Send_command_cars_y [] (select (= :tl_cars :green) (op-subs :AddDeadline :cmd_cars_yellow 500)))
    (operation [] :Send_command_cars_g [] (select (= :tl_cars :redyellow) (op-subs :AddDeadline :cmd_cars_green 500)))
    (operation [] :Send_command_cars_r [] (select (= :tl_cars :yellow) (op-subs :AddDeadline :cmd_cars_red 500)))
    (operation [] :Send_command_peds_r [] (select (= :tl_peds :green) (op-subs :AddDeadline :cmd_peds_red 500)))
    (operation [] :Send_command_peds_g [] (select (and (= :tl_cars :red) (= :tl_peds :red)) (op-subs :AddDeadline :cmd_peds_green 500)))
    (operation [] :Timeout [:cmd] (select (and (contains? (dom :curDeadlines) :cmd) (= (apply :curDeadlines :cmd) 0)) (op-subs :TimeoutDeadline :cmd 0)))
    (operation [] :cars_ry [] (select (and (= :tl_cars :red) (= :tl_peds :red)) (parallel-substitution (assign :tl_cars :redyellow) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_cars_redyellow :delta)))))
    (operation [] :cars_y [] (select (= :tl_cars :green) (parallel-substitution (assign :tl_cars :yellow) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_cars_yellow :delta)))))
    (operation [] :cars_g [] (select (= :tl_cars :redyellow) (parallel-substitution (assign :tl_cars :green) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_cars_green :delta)))))
    (operation [] :cars_r [] (select (= :tl_cars :yellow) (parallel-substitution (assign :tl_cars :red) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_cars_red :delta)))))
    (operation [] :peds_r [] (select (= :tl_peds :green) (parallel-substitution (assign :tl_peds :red) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_peds_red :delta)))))
    (operation [] :peds_g [] (select (and (= :tl_cars :red) (= :tl_peds :red)) (parallel-substitution (assign :tl_peds :green) (any [:delta] (contains? (interval 0 500) :delta) (op-subs :IncreaseTimeUntilDeadline :cmd_peds_green :delta)))))
    (operation [] :RTIME_Passes [:delta] (select (contains? #{100} :delta) (op-subs :IncreaseTime :delta)))))
