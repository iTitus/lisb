(refinement :TrafficLightTime_Ref :TrafficLight2
  (includes [:GenericTimersMC :COMMANDS])
  (variables :tl_cars :tl_peds)
  (init (parallel-sub (assign :tl_cars :red) (assign :tl_peds :red)))
  (operations
    (:Send_command_cars_ry []
      (select (and (= :tl_cars :red) (= :tl_peds :red)) (op-call :AddDeadline :cmd_cars_redyellow 500)))
    (:Send_command_cars_y []
      (select (= :tl_cars :green) (op-call :AddDeadline :cmd_cars_yellow 500)))
    (:Send_command_cars_g []
      (select (= :tl_cars :redyellow) (op-call :AddDeadline :cmd_cars_green 500)))
    (:Send_command_cars_r []
      (select (= :tl_cars :yellow) (op-call :AddDeadline :cmd_cars_red 500)))
    (:Send_command_peds_r []
      (select (= :tl_peds :green) (op-call :AddDeadline :cmd_peds_red 500)))
    (:Send_command_peds_g []
      (select (and (= :tl_cars :red) (= :tl_peds :red)) (op-call :AddDeadline :cmd_peds_green 500)))
    (:Timeout [:cmd]
      (select (and (member? :cmd (dom :curDeadlines)) (= (fn-call :curDeadlines :cmd) 0))
        (op-call :TimeoutDeadline :cmd 0)))
    (:cars_ry []
      (select (and (= :tl_cars :red) (= :tl_peds :red))
        (parallel-sub
          (assign :tl_cars :redyellow)
          (any [:delta] (member? :delta (interval 0 500))
            (op-call :IncreaseTimeUntilDeadline :cmd_cars_redyellow :delta)))))
    (:cars_y []
      (select (= :tl_cars :green)
        (parallel-sub
          (assign :tl_cars :yellow)
          (any [:delta] (member? :delta (interval 0 500)) (op-call :IncreaseTimeUntilDeadline :cmd_cars_yellow :delta)))))
    (:cars_g []
      (select (= :tl_cars :redyellow)
        (parallel-sub
          (assign :tl_cars :green)
          (any [:delta] (member? :delta (interval 0 500)) (op-call :IncreaseTimeUntilDeadline :cmd_cars_green :delta)))))
    (:cars_r []
      (select (= :tl_cars :yellow)
        (parallel-sub
          (assign :tl_cars :red)
          (any [:delta] (member? :delta (interval 0 500)) (op-call :IncreaseTimeUntilDeadline :cmd_cars_red :delta)))))
    (:peds_r []
      (select (= :tl_peds :green)
        (parallel-sub
          (assign :tl_peds :red)
          (any [:delta] (member? :delta (interval 0 500)) (op-call :IncreaseTimeUntilDeadline :cmd_peds_red :delta)))))
    (:peds_g []
      (select (and (= :tl_cars :red) (= :tl_peds :red))
        (parallel-sub
          (assign :tl_peds :green)
          (any [:delta] (member? :delta (interval 0 500)) (op-call :IncreaseTimeUntilDeadline :cmd_peds_green :delta)))))
    (:RTIME_Passes [:delta] (select (member? :delta #{100}) (op-call :IncreaseTime :delta)))))